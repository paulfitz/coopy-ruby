begin 
  # Hello good evening and welcome to a translation from the original Haxe
  # some band-aids until we figure out a better translation for iterators
  def _hx_iterator(o) return lambda{ (o.class == Array) ? ::Rb::RubyIterator.new(o) : ((o.respond_to? 'iterator') ? o.iterator : o)} end
  def _hx_call(o,k) ((o.respond_to? k) ? o.method(k).call : o[k].call) end
  
  require 'lambda'
  require 'list'
  require 'imap'
  require 'reflect'
  require 'string_buf'
  require 'sys'
  require 'value_type'
  require 'type'
  require 'coopy/alignment'
  require 'coopy/bag'
  require 'coopy/cell_info'
  require 'coopy/change'
  require 'coopy/change_type'
  require 'coopy/compare'
  require 'coopy/compare_flags'
  require 'coopy/compare_table'
  require 'coopy/coopy'
  require 'coopy/cross_match'
  require 'coopy/csv'
  require 'coopy/diff_render'
  require 'coopy/row'
  require 'coopy/highlight_patch'
  require 'coopy/highlight_patch_unit'
  require 'coopy/index'
  require 'coopy/index_item'
  require 'coopy/index_pair'
  require 'coopy/mover'
  require 'coopy/ordering'
  require 'coopy/report'
  require 'coopy/simple_cell'
  require 'coopy/table'
  require 'coopy/simple_table'
  require 'coopy/view'
  require 'coopy/simple_view'
  require 'coopy/sparse_sheet'
  require 'coopy/table_comparison_state'
  require 'coopy/table_diff'
  require 'coopy/table_io'
  require 'coopy/table_modifier'
  require 'coopy/table_text'
  require 'coopy/table_view'
  require 'coopy/unit'
  require 'coopy/viewed_datum'
  require 'coopy/viterbi'
  require 'coopy/workspace'
  require 'haxe/json'
  require 'haxe/log'
  require 'haxe/io/bytes'
  require 'haxe/io/eof'
  require 'haxe/io/error'
  require 'haxe/io/output'
  require 'rb/ruby_iterator'
  require 'sys/io/file_handle'
  require 'sys/io/file'
  require 'sys/io/file_output'
  ::Coopy::Coopy.main
end